name: typeable
version: 0.1.0.0
github: "githubuser/typeable"
license: BSD3
author: "Author name here"
maintainer: "example@example.com"
copyright: "2022 Author name here"

extra-source-files:
  - README.md
  - ChangeLog.md

# Metadata used when publishing your package
# synopsis:            Short description of your package
# category:            Web

# To avoid duplicated efforts in documentation and dealing with the
# complications of embedding Haddock markup inside cabal files, it is
# common to point users to the README.md file.
description: Please see the README on GitHub at <https://github.com/githubuser/typeable#readme>

dependencies:
  - base >= 4.7 && < 5
  - megaparsec
  - text
  - hspec
  - hspec-discover
  - QuickCheck
  - quickcheck-instances
  - mtl
  - containers
  - generic-lens
  - lens
  - prettyprinter

library:
  source-dirs: src

executables:
  typeable-exe:
    main: Main.hs
    source-dirs: app
    # ghc-options:
    #   - -threaded
    #   - -rtsopts
    #   - -with-rtsopts=-N
    dependencies:
      - typeable

tests:
  typeable-test:
    main: Spec.hs
    source-dirs: test
    # ghc-options:
    #   - -threaded
    #   - -rtsopts
    #   - -with-rtsopts=-N
    dependencies:
      - typeable
    verbatim:
      build-tool-depends: hspec-discover:hspec-discover == 2.*

default-extensions: OverloadedStrings
  DerivingStrategies
  ViewPatterns
  OverloadedLabels
  GeneralizedNewtypeDeriving
  DeriveGeneric
  TypeFamilies
  AllowAmbiguousTypes
  DataKinds
  DeriveGeneric
  DuplicateRecordFields
  FlexibleContexts
  GADTs
  OverloadedLabels
  PartialTypeSignatures
  Rank2Types
  ScopedTypeVariables
  TypeApplications
  UndecidableInstances
  StandaloneDeriving
  MultiParamTypeClasses
  FlexibleInstances
  NoMonomorphismRestriction

ghc-options:
  - -Weverything
  - -Werror
  - -Wno-missing-exported-signatures # missing-exported-signatures turns off the more strict -Wmissing-signatures.
  - -fno-warn-unused-imports
  - -Wno-missed-specialisations # When GHC can’t specialize a polymorphic function.
  - -Wno-all-missed-specialisations # See missed-specialisations
  - -Wno-unsafe # Don’t use Safe Haskell warnings
  - -Wno-safe # Don’t use Safe Haskell warnings
  - -Wno-missing-local-signatures # Warning for polymorphic local bindings; nothing wrong with those.
  # - -Wno-monomorphism-restriction # Don’t warn if the monomorphism restriction is used
  - -Wno-missing-export-lists # Don't warn if export list is missing
  - -Wno-missing-import-lists # Don't warn if export list is missing
  # - -Wno-missing-safe-haskell-mode
  # -Wmissing-safe-haskell-mode
  # - -Wno-prepositive-qualified-module
  # - -Wno-unused-packages
  - -Wno-implicit-prelude
  # - -threaded
  # - -rtsopts
  # - -with-rtsopts=-N
